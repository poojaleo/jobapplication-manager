@startuml
title: Create JobApplication

actor Client
participant "API Gateway" as APIGateway
participant Lambda
participant CreateJobApplicationActivity
participant JobApplicationDao
participant JobTrackerServiceUtils
participant ModelConverter
database DynamoDB

Client -> APIGateway : POST /users/{username}/jobapplications
activate Client
APIGateway -> Lambda
activate Lambda
Lambda -> CreateJobApplicationActivity : handleRequest(CreateApplicationRequest, Context)
activate CreateJobApplicationActivity
activate JobApplicationDao
CreateJobApplicationActivity -> JobTrackerServiceUtils: isValidString(name)

alt if name is invalid
JobTrackerServiceUtils --> CreateJobApplicationActivity: false
Lambda <-- CreateJobApplicationActivity : throw InvalidAttributeValueException
APIGateway <-- Lambda
Client <-- APIGateway : 400 Response
else otherwise continue
end

CreateJobApplicationActivity -> JobTrackerServiceUtils: generateId()
JobTrackerServiceUtils --> CreateJobApplicationActivity : new application Id
CreateJobApplicationActivity -> CreateJobApplicationActivity: makes JobApplication object
CreateJobApplicationActivity -> JobApplicationDao: saveJobApplication(jobApplication)
JobApplicationDao -> DynamoDB: save JobApplication
DynamoDB --> JobApplicationDao
JobApplicationDao --> CreateJobApplicationActivity : JobApplication
CreateJobApplicationActivity -> ModelConverter : toJobApplicationModel(JobApplication)
activate ModelConverter
ModelConverter --> CreateJobApplicationActivity : JobApplicationModel
deactivate ModelConverter
CreateJobApplicationActivity -> CreateJobApplicationActivity: create CreateJobApplicationResult
CreateJobApplicationActivity --> Lambda : CreateJobApplicationResult
deactivate CreateJobApplicationActivity
deactivate JobApplicationDao
Lambda --> APIGateway
deactivate Lambda
APIGateway --> Client : 200 Response
deactivate Client
@enduml

